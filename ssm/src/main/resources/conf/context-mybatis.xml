<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="  
                    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.liujp.service" />
    <context:annotation-config />
    <!-- Properties文件读取配置，base的properties -->
    <context:property-placeholder location="classpath:conf/jdbc.properties" />
    <!-- JNDI获取数据源(使用c3p0连接池) -->
    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="idleConnectionTestPeriod" value="60" />
        <property name="idleMaxAge" value="240" />
        <property name="maxConnectionsPerPartition" value="${bonecp.maxConnectionsPerPartition}" />
        <property name="minConnectionsPerPartition" value="${bonecp.minConnectionsPerPartition}" />
        <property name="partitionCount" value="${bonecp.partitionCount}" />
        <property name="acquireIncrement" value="5" />
        <property name="statementsCacheSize" value="100" />
        <property name="releaseHelperThreads" value="3" />
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean> 
    

	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven  transaction-manager="transactionManager"
		proxy-target-class="true"/>

	<!-- define the SqlSessionFactory, notice that configLocation is not needed when you use MapperFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:conf/mybatis-config.xml" /> 
        <property name="typeAliasesPackage" value="com.liujp.model" />
        <property name="mapperLocations" value="classpath:mapper/*" />
    </bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
		<property name="basePackage" value="com.liujp.dao.mybatis" />
	</bean>
</beans>